import {
  capitalize_default
} from "./chunk-XV5EHBCH.js";
import {
  memoTheme
} from "./chunk-MOVNCSLG.js";
import {
  ClassNameGenerator_default,
  clsx_default,
  composeClasses,
  createChainedFunction,
  debounce,
  deprecatedPropType,
  generateUtilityClass,
  generateUtilityClasses,
  isMuiElement,
  ownerDocument,
  ownerWindow,
  requirePropFactory,
  setRef,
  styled_default,
  unsupportedProp,
  useControlled,
  useDefaultProps,
  useId
} from "./chunk-JFZKJ4M4.js";
import {
  require_jsx_runtime
} from "./chunk-P5QL3IWY.js";
import {
  require_prop_types
} from "./chunk-DBLH7QX4.js";
import {
  require_react
} from "./chunk-NWDXFPN2.js";
import {
  __toESM
} from "./chunk-MB5FDF5C.js";

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/createChainedFunction.js
var createChainedFunction_default = createChainedFunction;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/SvgIcon/svgIconClasses.js
function getSvgIconUtilityClass(slot) {
  return generateUtilityClass("MuiSvgIcon", slot);
}
var svgIconClasses = generateUtilityClasses("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
var svgIconClasses_default = svgIconClasses;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/SvgIcon/SvgIcon.js
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
var import_jsx_runtime = __toESM(require_jsx_runtime());
"use client";
var useUtilityClasses = (ownerState) => {
  const {
    color,
    fontSize,
    classes
  } = ownerState;
  const slots = {
    root: ["root", color !== "inherit" && `color${capitalize_default(color)}`, `fontSize${capitalize_default(fontSize)}`]
  };
  return composeClasses(slots, getSvgIconUtilityClass, classes);
};
var SvgIconRoot = styled_default("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, ownerState.color !== "inherit" && styles[`color${capitalize_default(ownerState.color)}`], styles[`fontSize${capitalize_default(ownerState.fontSize)}`]];
  }
})(memoTheme(({
  theme
}) => ({
  userSelect: "none",
  width: "1em",
  height: "1em",
  display: "inline-block",
  flexShrink: 0,
  transition: theme.transitions?.create?.("fill", {
    duration: (theme.vars ?? theme).transitions?.duration?.shorter
  }),
  variants: [
    {
      props: (props) => !props.hasSvgAsChild,
      style: {
        fill: "currentColor"
      }
    },
    {
      props: {
        fontSize: "inherit"
      },
      style: {
        fontSize: "inherit"
      }
    },
    {
      props: {
        fontSize: "small"
      },
      style: {
        fontSize: theme.typography?.pxToRem?.(20) || "1.25rem"
      }
    },
    {
      props: {
        fontSize: "medium"
      },
      style: {
        fontSize: theme.typography?.pxToRem?.(24) || "1.5rem"
      }
    },
    {
      props: {
        fontSize: "large"
      },
      style: {
        fontSize: theme.typography?.pxToRem?.(35) || "2.1875rem"
      }
    },
    ...Object.entries((theme.vars ?? theme).palette).filter(([, value]) => value && value.main).map(([color]) => ({
      props: {
        color
      },
      style: {
        color: (theme.vars ?? theme).palette?.[color]?.main
      }
    })),
    {
      props: {
        color: "action"
      },
      style: {
        color: (theme.vars ?? theme).palette?.action?.active
      }
    },
    {
      props: {
        color: "disabled"
      },
      style: {
        color: (theme.vars ?? theme).palette?.action?.disabled
      }
    },
    {
      props: {
        color: "inherit"
      },
      style: {
        color: void 0
      }
    }
  ]
})));
var SvgIcon = React.forwardRef(function SvgIcon2(inProps, ref) {
  const props = useDefaultProps({
    props: inProps,
    name: "MuiSvgIcon"
  });
  const {
    children,
    className,
    color = "inherit",
    component = "svg",
    fontSize = "medium",
    htmlColor,
    inheritViewBox = false,
    titleAccess,
    viewBox = "0 0 24 24",
    ...other
  } = props;
  const hasSvgAsChild = React.isValidElement(children) && children.type === "svg";
  const ownerState = {
    ...props,
    color,
    component,
    fontSize,
    instanceFontSize: inProps.fontSize,
    inheritViewBox,
    viewBox,
    hasSvgAsChild
  };
  const more = {};
  if (!inheritViewBox) {
    more.viewBox = viewBox;
  }
  const classes = useUtilityClasses(ownerState);
  return (0, import_jsx_runtime.jsxs)(SvgIconRoot, {
    as: component,
    className: clsx_default(classes.root, className),
    focusable: "false",
    color: htmlColor,
    "aria-hidden": titleAccess ? void 0 : true,
    role: titleAccess ? "img" : void 0,
    ref,
    ...more,
    ...other,
    ...hasSvgAsChild && children.props,
    ownerState,
    children: [hasSvgAsChild ? children.props.children : children, titleAccess ? (0, import_jsx_runtime.jsx)("title", {
      children: titleAccess
    }) : null]
  });
});
true ? SvgIcon.propTypes = {
  children: import_prop_types.default.node,
  classes: import_prop_types.default.object,
  className: import_prop_types.default.string,
  color: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types.default.string]),
  component: import_prop_types.default.elementType,
  fontSize: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["inherit", "large", "medium", "small"]), import_prop_types.default.string]),
  htmlColor: import_prop_types.default.string,
  inheritViewBox: import_prop_types.default.bool,
  shapeRendering: import_prop_types.default.string,
  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),
  titleAccess: import_prop_types.default.string,
  viewBox: import_prop_types.default.string
} : void 0;
if (SvgIcon) {
  SvgIcon.muiName = "SvgIcon";
}
var SvgIcon_default = SvgIcon;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/createSvgIcon.js
var React2 = __toESM(require_react());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
"use client";
function createSvgIcon(path, displayName) {
  function Component(props, ref) {
    return (0, import_jsx_runtime2.jsx)(SvgIcon_default, {
      "data-testid": `${displayName}Icon`,
      ref,
      ...props,
      children: path
    });
  }
  if (true) {
    Component.displayName = `${displayName}Icon`;
  }
  Component.muiName = SvgIcon_default.muiName;
  return React2.memo(React2.forwardRef(Component));
}

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/debounce.js
var debounce_default = debounce;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/deprecatedPropType.js
var deprecatedPropType_default = deprecatedPropType;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/isMuiElement.js
var isMuiElement_default = isMuiElement;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/ownerDocument.js
var ownerDocument_default = ownerDocument;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/ownerWindow.js
var ownerWindow_default = ownerWindow;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/requirePropFactory.js
var requirePropFactory_default = requirePropFactory;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/setRef.js
var setRef_default = setRef;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/useId.js
"use client";
var useId_default = useId;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/unsupportedProp.js
var unsupportedProp_default = unsupportedProp;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/useControlled.js
"use client";
var useControlled_default = useControlled;

// node_modules/.pnpm/@mui+material@6.1.0_@emotion+react@11.11.1_@emotion+styled@11.13.0_@types+react@18.2.33_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/index.js
"use client";
var unstable_ClassNameGenerator = {
  configure: (generator) => {
    if (true) {
      console.warn(["MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.", "", "You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead", "", "The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401", "", "The updated documentation: https://mui.com/guides/classname-generator/"].join("\n"));
    }
    ClassNameGenerator_default.configure(generator);
  }
};

export {
  createChainedFunction_default,
  getSvgIconUtilityClass,
  svgIconClasses_default,
  SvgIcon_default,
  createSvgIcon,
  debounce_default,
  deprecatedPropType_default,
  isMuiElement_default,
  ownerDocument_default,
  ownerWindow_default,
  requirePropFactory_default,
  setRef_default,
  useId_default,
  unsupportedProp_default,
  useControlled_default,
  unstable_ClassNameGenerator
};
//# sourceMappingURL=chunk-UAMHUA7Q.js.map
